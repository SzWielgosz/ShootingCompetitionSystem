# Generated by Django 4.2.6 on 2023-10-31 16:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=9)),
                ('is_participant', models.BooleanField(default=False, verbose_name='participant status')),
                ('is_organization', models.BooleanField(default=False, verbose_name='organization status')),
                ('is_referee', models.BooleanField(default=False, verbose_name='referee status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discipline', models.CharField(choices=[('pistol', 'Pistolet'), ('rifle', 'Karabin'), ('shotgun', 'Strzelba')], max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('date_time', models.DateTimeField()),
                ('city', models.CharField(max_length=90)),
                ('street', models.CharField(max_length=90)),
                ('house_number', models.CharField(max_length=9)),
                ('age_restriction', models.CharField(choices=[('youth', 'Młodzicy'), ('younger juniors', 'Młodsi juniorzy'), ('junior', 'Juniorzy'), ('seniors', 'Seniorzy')], max_length=20)),
                ('target', models.CharField(choices=[('static', 'Statyczne'), ('moving', 'Ruchome')], max_length=20)),
                ('organization', models.ForeignKey(limit_choices_to={'is_organization': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('competition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.competition')),
                ('participant', models.ForeignKey(limit_choices_to={'is_participant': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='participation_in_rounds', to=settings.AUTH_USER_MODEL)),
                ('referee', models.ForeignKey(limit_choices_to={'is_referee': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referee_in_rounds', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.competition')),
                ('participant', models.ForeignKey(limit_choices_to={'is_participant': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('city', models.CharField(max_length=90)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('website_url', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=90)),
                ('post_code', models.CharField(max_length=9)),
                ('street', models.CharField(max_length=60)),
                ('house_number', models.CharField(max_length=9)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('success', models.BooleanField()),
                ('participant', models.ForeignKey(limit_choices_to={'is_participant': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('round', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.round')),
            ],
        ),
    ]
